devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
library(SpMix)
options(error=recover)
M <- 500
N <- 1000
p0=0.95
r=1
n=N
Draw.boxplotsM <- function(Obj)
{
p0hat <- Obj$p0hat.SP
Sensitivity <- Obj$Sensitivity
FPR <- 1 - Obj$Specificity
par(mfrow = c(1, 3))
boxplot(p0hat, main = "Estimates of p0")
boxplot(FPR, main = "False Positive Rate = (1 - Specificity)", ylim = c(0, 0.05))
boxplot(Sensitivity, main = "Sensitivity", ylim = c(0.8, 1))
}
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.1 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.2 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal",
param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
3
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
library(SpMix)
Draw.boxplotsM <- function(Obj)
{
p0hat <- Obj$p0hat.SP
Sensitivity <- Obj$Sensitivity
FPR <- 1 - Obj$Specificity
par(mfrow = c(1, 3))
boxplot(p0hat, main = "Estimates of p0")
boxplot(FPR, main = "False Positive Rate = (1 - Specificity)", ylim = c(0, 0.05))
boxplot(Sensitivity, main = "Sensitivity", ylim = c(0.8, 1))
}
M <- 500
N <- 1000
p0=0.95
r=1
n=N
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.1 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.2 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal",
param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
library(SpMix)
M <- 500
N <- 1000
p0=0.95
r=1
n=N
Draw.boxplotsM <- function(Obj)
{
p0hat <- Obj$p0hat.SP
Sensitivity <- Obj$Sensitivity
FPR <- 1 - Obj$Specificity
par(mfrow = c(1, 3))
boxplot(p0hat, main = "Estimates of p0")
boxplot(FPR, main = "False Positive Rate = (1 - Specificity)", ylim = c(0, 0.05))
boxplot(Sensitivity, main = "Sensitivity", ylim = c(0.8, 1))
}
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.1 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.2 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal",
param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
library(SpMix)
res <- sp.mix.multi(z)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens",build_vignettes = FALSE)
library(SpMix)
res <- sp.mix.multi(z)
setwd("/Users/user/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/Multi_Normal_LocConcDEAD")
setwd("/Users/user/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/Multi_Normal_LocConcDEAD")
setwd("/Users/user/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/Multi_Normal_LocConcDEAD")
setwd("/Users/user/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/Multi_Normal_LocConcDEAD")
# Install SpMix @ fmlogcondens_merge
devtools::install_github("JaneeChoi/SpMix",ref = "fmlogcondens_merge")
library(SpMix)
getAnywhere(paramFitGammaOne())
M<-1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/2d_Normal_fmlogcondens")
iternum=10
for (N in c(100,500,1000,5000,10000,15000,20000,25000)){
time95=rep(0,iternum)
time90=rep(0,iternum)
time80=rep(0,iternum)
for (iter in 1:iternum){
time95[iter]<-system.time(Res.1<-SimMultNormal(M = M, n = N, p0 = 0.95))[3]
time90[iter]<-system.time(Res.3<-SimMultNormal(M = M, n = N, p0 = 0.90))[3]
time80[iter]<-system.time(Res.2<-SimMultNormal(M = M, n = N, p0 = 0.80))[3]
}
result_df<-data.frame(time95=time95,time90=time90,time85=time85)
write.csv(result_df,paste0("repeated_result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
SimMultNormal <- function(M, n, p0)
# [Multivariate] Null: Normal, Nonnull: Normal
{
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
for ( r in 1:M ) {
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal", param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result$p0hat.SP[r] <- p0hat
result$Sensitivity[r] <- TP/(TP + FN)
result$Specificity[r] <- TN/(TN + FP)
}
return(result)
}
SimMultNormal3d <- function(M, n, p0)
# [Multivariate] Null: Normal, Nonnull: Normal
{
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
rho13 <- 0.25
rho23 <- 0.25
Sigma0 <- matrix(c(1, rho12, rho13,
rho12, 1, rho23,
rho13,rho23,1),
ncol = 3, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
library(scatterplot3d)
for ( r in 1:M ) {
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal", param = param, dim = 3))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
scatterplot3d(z, color = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result$p0hat.SP[r] <- p0hat
result$Sensitivity[r] <- TP/(TP + FN)
result$Specificity[r] <- TN/(TN + FP)
}
return(result)
}
getAnywhere(sp.mix.multi)
set.seed(210828)
M<-1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/2d_Normal_fmlogcondens")
iternum=10
for (N in c(100,500,1000,5000,10000,15000)){
time95=rep(0,iternum)
time90=rep(0,iternum)
time80=rep(0,iternum)
for (iter in 1:iternum){
time95[iter]<-system.time(Res.1<-SimMultNormal(M = M, n = N, p0 = 0.95))[3]
time90[iter]<-system.time(Res.3<-SimMultNormal(M = M, n = N, p0 = 0.90))[3]
time80[iter]<-system.time(Res.2<-SimMultNormal(M = M, n = N, p0 = 0.80))[3]
}
result_df<-data.frame(time95=time95,time90=time90,time85=time85)
write.csv(result_df,paste0("repeated_result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
# sp.mix.multi @ fmlogcondens_merge 3d Normal
#library(SpMix)
set.seed(210828)
M <- 1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/3d_Normal_fmlogcondens")
iternum=10
for (N in c(100,500,1000,5000,10000,15000)){
time95=rep(0,iternum)
time90=rep(0,iternum)
time80=rep(0,iternum)
for (iter in 1:iternum){
time95[iter]<-system.time(Res.1<-SimMultNormal3d(M = M, n = N, p0 = 0.95))[3]
time90[iter]<-system.time(Res.3<-SimMultNormal3d(M = M, n = N, p0 = 0.90))[3]
time80[iter]<-system.time(Res.2<-SimMultNormal3d(M = M, n = N, p0 = 0.80))[3]
}
result_df<-data.frame(time95=time95,time90=time90,time85=time85)
write.csv(result_df,paste0("repeated_result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
M<-1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/2d_Normal_fmlogcondens")
iternum=10
for (N in c(100,500,1000,5000,10000,15000)){
time95=rep(0,iternum)
time90=rep(0,iternum)
time80=rep(0,iternum)
for (iter in 1:iternum){
time95[iter]<-system.time(Res.1<-SimMultNormal(M = M, n = N, p0 = 0.95))[3]
time90[iter]<-system.time(Res.3<-SimMultNormal(M = M, n = N, p0 = 0.90))[3]
time80[iter]<-system.time(Res.2<-SimMultNormal(M = M, n = N, p0 = 0.80))[3]
}
result_df<-data.frame(time95=time95,time90=time90,time80=time80)
write.csv(result_df,paste0("repeated_result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
# sp.mix.multi @ fmlogcondens_merge 3d Normal
#library(SpMix)
set.seed(210828)
M <- 1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/3d_Normal_fmlogcondens")
iternum=10
for (N in c(100,500,1000,5000,10000,15000)){
time95=rep(0,iternum)
time90=rep(0,iternum)
time80=rep(0,iternum)
for (iter in 1:iternum){
time95[iter]<-system.time(Res.1<-SimMultNormal3d(M = M, n = N, p0 = 0.95))[3]
time90[iter]<-system.time(Res.3<-SimMultNormal3d(M = M, n = N, p0 = 0.90))[3]
time80[iter]<-system.time(Res.2<-SimMultNormal3d(M = M, n = N, p0 = 0.80))[3]
}
result_df<-data.frame(time95=time95,time90=time90,time80=time80)
write.csv(result_df,paste0("repeated_result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
M<-1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/2d_Normal_fmlogcondens")
iternum=10
for (N in c(500,1000,5000,10000,15000)){
time95=rep(0,iternum)
time90=rep(0,iternum)
time80=rep(0,iternum)
for (iter in 1:iternum){
time95[iter]<-system.time(Res.1<-SimMultNormal(M = M, n = N, p0 = 0.95))[3]
time90[iter]<-system.time(Res.3<-SimMultNormal(M = M, n = N, p0 = 0.90))[3]
time80[iter]<-system.time(Res.2<-SimMultNormal(M = M, n = N, p0 = 0.80))[3]
}
result_df<-data.frame(time95=time95,time90=time90,time80=time80)
write.csv(result_df,paste0("repeated_result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
# sp.mix.multi @ fmlogcondens_merge 3d Normal
#library(SpMix)
set.seed(210828)
M <- 1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/3d_Normal_fmlogcondens")
iternum=10
for (N in c(100,500,1000,5000,10000,15000)){
time95=rep(0,iternum)
time90=rep(0,iternum)
time80=rep(0,iternum)
for (iter in 1:iternum){
time95[iter]<-system.time(Res.1<-SimMultNormal3d(M = M, n = N, p0 = 0.95))[3]
time90[iter]<-system.time(Res.3<-SimMultNormal3d(M = M, n = N, p0 = 0.90))[3]
time80[iter]<-system.time(Res.2<-SimMultNormal3d(M = M, n = N, p0 = 0.80))[3]
}
result_df<-data.frame(time95=time95,time90=time90,time80=time80)
write.csv(result_df,paste0("repeated_result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
library(ggplot2)
library(dplyr)
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/2d_Normal_fmlogcondens")
res100<-unname(as.matrix(read.csv("result_gamma_100.csv")[,2:4]))
res500<-unname(as.matrix(read.csv("result_gamma_500.csv")[,2:4]))
res1000<-unname(as.matrix(read.csv("result_gamma_1000.csv")[,2:4]))
res5000<-unname(as.matrix(read.csv("result_gamma_5000.csv")[,2:4]))
res10000<-unname(as.matrix(read.csv("result_gamma_10000.csv")[,2:4]))
res15000<-unname(as.matrix(read.csv("result_15000.csv")[,2:4]))
res20000<-unname(as.matrix(read.csv("result_20000.csv")[,2:4]))
res25000<-unname(as.matrix(read.csv("result_25000.csv")[,2:4]))
res100<-unname(as.matrix(read.csv("result_100.csv")[,2:4]))
res500<-unname(as.matrix(read.csv("result_500.csv")[,2:4]))
res1000<-unname(as.matrix(read.csv("result_1000.csv")[,2:4]))
res5000<-unname(as.matrix(read.csv("result_5000.csv")[,2:4]))
res10000<-unname(as.matrix(read.csv("result_10000.csv")[,2:4]))
res15000<-unname(as.matrix(read.csv("result_15000.csv")[,2:4]))
res20000<-unname(as.matrix(read.csv("result_20000.csv")[,2:4]))
res25000<-unname(as.matrix(read.csv("result_25000.csv")[,2:4]))
normal.log<-data.frame()
normal.log<-rbind(normal.log,data.frame(N=rep(100,3),p0=c(0.95,0.9,0.8),p0_hat=res100[2,],time=res100[1,],sens=res100[3,],spec=res100[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(500,3),p0=c(0.95,0.9,0.8),p0_hat=res500[2,],time=res500[1,],sens=res500[3,],spec=res500[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(1000,3),p0=c(0.95,0.9,0.8),p0_hat=res1000[2,],time=res1000[1,],sens=res1000[3,],spec=res1000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(5000,3),p0=c(0.95,0.9,0.8),p0_hat=res5000[2,],time=res5000[1,],sens=res5000[3,],spec=res5000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(10000,3),p0=c(0.95,0.9,0.8),p0_hat=res10000[2,],time=res10000[1,],sens=res10000[3,],spec=res10000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(15000,3),p0=c(0.95,0.9,0.8),p0_hat=res15000[2,],time=res15000[1,],sens=res15000[3,],spec=res15000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(20000,3),p0=c(0.95,0.9,0.8),p0_hat=res20000[2,],time=res20000[1,],sens=res20000[3,],spec=res20000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(25000,3),p0=c(0.95,0.9,0.8),p0_hat=res25000[2,],time=res25000[1,],sens=res25000[3,],spec=res25000[4,]))
write.csv(normal.log,"merged.csv")
p1<-ggplot(data=normal.log,aes(x=N,y=time,group=p0,colour=p0))+geom_line()
p1
ggsave("time.png", plot=p1, height=6, width=8, dpi=600)
p2<-ggplot(data=normal.log,aes(x=N,y=sens,group=p0,colour=p0))+geom_line()+coord_cartesian(ylim = c(0.5,1)) +ylab("sensitivity")
p2
p3<-ggplot(data=normal.log,aes(x=N,y=spec,group=p0,colour=p0))+geom_line()+coord_cartesian(ylim = c(0.5,1)) +ylab("specificity")
p3
p4<-ggplot(data=normal.log,aes(x=N,y=p0_hat,group=p0,colour=p0))+coord_cartesian(xlim=c(50,10000))+geom_line()+ylab("specificity")
p4
ggsave("sens.png", plot=p2, height=6, width=8, dpi=600)
ggsave("spec.png", plot=p3, height=6, width=8, dpi=600)
p4<-ggplot(data=normal.log,aes(x=N,y=p0_hat,group=p0,colour=p0))+coord_cartesian(xlim=c(50,10000))+geom_line()+ylab("p0 hat")
p4
p4<-ggplot(data=normal.log,aes(x=N,y=p0_hat,group=p0,colour=p0))+coord_cartesian(xlim=c(50,10000))+geom_line()+ylab("p0 hat")
p4
ggsave("p0_hat.png", plot=p4, height=6, width=8, dpi=600)
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/2d_Gamma_fmlogcondens ")
res100<-unname(as.matrix(read.csv("result_100.csv")[,2:4]))
res500<-unname(as.matrix(read.csv("result_500.csv")[,2:4]))
res1000<-unname(as.matrix(read.csv("result_1000.csv")[,2:4]))
res5000<-unname(as.matrix(read.csv("result_5000.csv")[,2:4]))
res10000<-unname(as.matrix(read.csv("result_10000.csv")[,2:4]))
res15000<-unname(as.matrix(read.csv("result_15000.csv")[,2:4]))
res20000<-unname(as.matrix(read.csv("result_20000.csv")[,2:4]))
res25000<-unname(as.matrix(read.csv("result_25000.csv")[,2:4]))
normal.log<-data.frame()
normal.log<-rbind(normal.log,data.frame(N=rep(100,3),p0=c(0.95,0.9,0.8),p0_hat=res100[2,],time=res100[1,],sens=res100[3,],spec=res100[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(500,3),p0=c(0.95,0.9,0.8),p0_hat=res500[2,],time=res500[1,],sens=res500[3,],spec=res500[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(1000,3),p0=c(0.95,0.9,0.8),p0_hat=res1000[2,],time=res1000[1,],sens=res1000[3,],spec=res1000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(5000,3),p0=c(0.95,0.9,0.8),p0_hat=res5000[2,],time=res5000[1,],sens=res5000[3,],spec=res5000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(10000,3),p0=c(0.95,0.9,0.8),p0_hat=res10000[2,],time=res10000[1,],sens=res10000[3,],spec=res10000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(15000,3),p0=c(0.95,0.9,0.8),p0_hat=res15000[2,],time=res15000[1,],sens=res15000[3,],spec=res15000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(20000,3),p0=c(0.95,0.9,0.8),p0_hat=res20000[2,],time=res20000[1,],sens=res20000[3,],spec=res20000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(25000,3),p0=c(0.95,0.9,0.8),p0_hat=res25000[2,],time=res25000[1,],sens=res25000[3,],spec=res25000[4,]))
write.csv(normal.log,"merged.csv")
library(ggplot2)
library(dplyr)
p1<-ggplot(data=normal.log,aes(x=N,y=time,group=p0,colour=p0))+geom_line()
p1
ggsave("time.png", plot=p1, height=6, width=8, dpi=600)
p2<-ggplot(data=normal.log,aes(x=N,y=sens,group=p0,colour=p0))+geom_line()+coord_cartesian(ylim = c(0.5,1)) +ylab("sensitivity")
p2
p3<-ggplot(data=normal.log,aes(x=N,y=spec,group=p0,colour=p0))+geom_line()+coord_cartesian(ylim = c(0.5,1)) +ylab("specificity")
p3
p3<-ggplot(data=normal.log,aes(x=N,y=spec,group=p0,colour=p0))+geom_line()+coord_cartesian(ylim = c(0.5,1)) +ylab("specificity")
p3
ggsave("spec.png", plot=p3, height=6, width=8, dpi=600)
p2<-ggplot(data=normal.log,aes(x=N,y=sens,group=p0,colour=p0))+geom_line()+coord_cartesian(ylim = c(0,1)) +ylab("sensitivity")
p2
ggsave("sens.png", plot=p2, height=6, width=8, dpi=600)
p4<-ggplot(data=normal.log,aes(x=N,y=p0_hat,group=p0,colour=p0))+coord_cartesian(xlim=c(50,10000))+geom_line()+ylab("p0 hat")
p4
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/3d_Gamma_fmlogcondens ")
res100<-unname(as.matrix(read.csv("result_100.csv")[,2:4]))
res500<-unname(as.matrix(read.csv("result_500.csv")[,2:4]))
res1000<-unname(as.matrix(read.csv("result_1000.csv")[,2:4]))
res5000<-unname(as.matrix(read.csv("result_5000.csv")[,2:4]))
res10000<-unname(as.matrix(read.csv("result_10000.csv")[,2:4]))
res15000<-unname(as.matrix(read.csv("result_15000.csv")[,2:4]))
res20000<-unname(as.matrix(read.csv("result_20000.csv")[,2:4]))
res25000<-unname(as.matrix(read.csv("result_25000.csv")[,2:4]))
normal.log<-data.frame()
normal.log<-rbind(normal.log,data.frame(N=rep(100,3),p0=c(0.95,0.9,0.8),p0_hat=res100[2,],time=res100[1,],sens=res100[3,],spec=res100[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(500,3),p0=c(0.95,0.9,0.8),p0_hat=res500[2,],time=res500[1,],sens=res500[3,],spec=res500[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(1000,3),p0=c(0.95,0.9,0.8),p0_hat=res1000[2,],time=res1000[1,],sens=res1000[3,],spec=res1000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(5000,3),p0=c(0.95,0.9,0.8),p0_hat=res5000[2,],time=res5000[1,],sens=res5000[3,],spec=res5000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(10000,3),p0=c(0.95,0.9,0.8),p0_hat=res10000[2,],time=res10000[1,],sens=res10000[3,],spec=res10000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(15000,3),p0=c(0.95,0.9,0.8),p0_hat=res15000[2,],time=res15000[1,],sens=res15000[3,],spec=res15000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(20000,3),p0=c(0.95,0.9,0.8),p0_hat=res20000[2,],time=res20000[1,],sens=res20000[3,],spec=res20000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(25000,3),p0=c(0.95,0.9,0.8),p0_hat=res25000[2,],time=res25000[1,],sens=res25000[3,],spec=res25000[4,]))
write.csv(normal.log,"merged.csv")
library(ggplot2)
library(dplyr)
p1<-ggplot(data=normal.log,aes(x=N,y=time,group=p0,colour=p0))+geom_line()
p1
res100<-unname(as.matrix(read.csv("result_100.csv")[,2:4]))
res500<-unname(as.matrix(read.csv("result_500.csv")[,2:4]))
res1000<-unname(as.matrix(read.csv("result_1000.csv")[,2:4]))
res5000<-unname(as.matrix(read.csv("result_5000.csv")[,2:4]))
res10000<-unname(as.matrix(read.csv("result_10000.csv")[,2:4]))
res15000<-unname(as.matrix(read.csv("result_15000.csv")[,2:4]))
res20000<-unname(as.matrix(read.csv("result_20000.csv")[,2:4]))
res25000<-unname(as.matrix(read.csv("result_25000.csv")[,2:4]))
normal.log<-data.frame()
normal.log<-rbind(normal.log,data.frame(N=rep(100,3),p0=c(0.95,0.9,0.8),p0_hat=res100[2,],time=res100[1,],sens=res100[3,],spec=res100[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(500,3),p0=c(0.95,0.9,0.8),p0_hat=res500[2,],time=res500[1,],sens=res500[3,],spec=res500[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(1000,3),p0=c(0.95,0.9,0.8),p0_hat=res1000[2,],time=res1000[1,],sens=res1000[3,],spec=res1000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(5000,3),p0=c(0.95,0.9,0.8),p0_hat=res5000[2,],time=res5000[1,],sens=res5000[3,],spec=res5000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(10000,3),p0=c(0.95,0.9,0.8),p0_hat=res10000[2,],time=res10000[1,],sens=res10000[3,],spec=res10000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(15000,3),p0=c(0.95,0.9,0.8),p0_hat=res15000[2,],time=res15000[1,],sens=res15000[3,],spec=res15000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(20000,3),p0=c(0.95,0.9,0.8),p0_hat=res20000[2,],time=res20000[1,],sens=res20000[3,],spec=res20000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(25000,3),p0=c(0.95,0.9,0.8),p0_hat=res25000[2,],time=res25000[1,],sens=res25000[3,],spec=res25000[4,]))
write.csv(normal.log,"merged.csv")
p1<-ggplot(data=normal.log,aes(x=N,y=time,group=p0,colour=p0))+geom_line()
p1
ggsave("time.png", plot=p1, height=6, width=8, dpi=600)
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/3d_Normal_fmlogcondens ")
res100<-unname(as.matrix(read.csv("result_100.csv")[,2:4]))
res500<-unname(as.matrix(read.csv("result_500.csv")[,2:4]))
res1000<-unname(as.matrix(read.csv("result_1000.csv")[,2:4]))
res5000<-unname(as.matrix(read.csv("result_5000.csv")[,2:4]))
res10000<-unname(as.matrix(read.csv("result_10000.csv")[,2:4]))
res15000<-unname(as.matrix(read.csv("result_15000.csv")[,2:4]))
res20000<-unname(as.matrix(read.csv("result_20000.csv")[,2:4]))
res25000<-unname(as.matrix(read.csv("result_25000.csv")[,2:4]))
normal.log<-data.frame()
normal.log<-rbind(normal.log,data.frame(N=rep(100,3),p0=c(0.95,0.9,0.8),p0_hat=res100[2,],time=res100[1,],sens=res100[3,],spec=res100[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(500,3),p0=c(0.95,0.9,0.8),p0_hat=res500[2,],time=res500[1,],sens=res500[3,],spec=res500[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(1000,3),p0=c(0.95,0.9,0.8),p0_hat=res1000[2,],time=res1000[1,],sens=res1000[3,],spec=res1000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(5000,3),p0=c(0.95,0.9,0.8),p0_hat=res5000[2,],time=res5000[1,],sens=res5000[3,],spec=res5000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(10000,3),p0=c(0.95,0.9,0.8),p0_hat=res10000[2,],time=res10000[1,],sens=res10000[3,],spec=res10000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(15000,3),p0=c(0.95,0.9,0.8),p0_hat=res15000[2,],time=res15000[1,],sens=res15000[3,],spec=res15000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(20000,3),p0=c(0.95,0.9,0.8),p0_hat=res20000[2,],time=res20000[1,],sens=res20000[3,],spec=res20000[4,]))
normal.log<-rbind(normal.log,data.frame(N=rep(25000,3),p0=c(0.95,0.9,0.8),p0_hat=res25000[2,],time=res25000[1,],sens=res25000[3,],spec=res25000[4,]))
write.csv(normal.log,"merged.csv")
library(ggplot2)
library(dplyr)
p1<-ggplot(data=normal.log,aes(x=N,y=time,group=p0,colour=p0))+geom_line()
p1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/3d_Gamma_fmlogcondens ")
