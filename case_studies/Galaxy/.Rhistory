mu0 <- mean(z[z <= q0])
sig0 <- sd(z[z <= q0])
f0 <- dmvnorm(z, mu0, sig0)
mu1 <- mean(z[z > q0])
sig1 <- sd(z[z > q0])
f1 <- dnorm(z, mu1, sig1)
} else {
q0 <- quantile(z, probs = .7)
p0 <- mean(z >= q0)
mu0 <- mean(z[z >= q0])
sig0 <- sd(z[z >= q0])
f0 <- dmvnorm(z, mu0, sig0)
mu1 <- mean(z[z < q0])
sig1 <- sd(z[z < q0])
f1 <- dnorm(z, mu1, sig1)
}
} else {
Params <- NormMix(z)
p0 <- Params$p0
mu0 <- Params$mu0
sig0 <- Params$sig0
f1 <- dmvnorm(z, Params$mu1, Params$sig1)
}
gam <- f <- rep(0, n)
if (d == 1) {
z <- as.numeric(z)
## EM-step
k <- 0; converged <- 0
while ( (k < 3) | ((k < max_iter) & (!converged)) ) {
k <- k + 1
## E-step
new_f <- (p0 * f0 + (1 - p0) * f1)
new_gam <- p0 * f0 / new_f
## M-step
w_gam <- new_gam/sum(new_gam, na.rm = TRUE)
new_mu0 <- sum(w_gam*z, na.rm = TRUE)
new_sig0 <- sqrt(sum(w_gam*(z-new_mu0)^2, na.rm = TRUE))
new_p0 <- mean(new_gam, na.rm = TRUE)
new_f0 <- dnorm(z, new_mu0, new_sig0)
new_f1 <- rep(0, n)
which_z <- (new_gam <= thre_z)
weight <- 1 - new_gam[which_z]
weight <- weight/sum(weight)
new_f1[which_z] <- exp(LogConcDEAD::mlelcd(z[which_z], w = weight)$logMLE)
## Update
which_gam <- (new_gam <= Uthre_gam) * (new_gam >= Lthre_gam)
diff <- max(abs(gam - new_gam)[which_gam])
converged <- (diff <= tol)
cat("   EM iteration:", k, ", Change in fdr fit = ", round(diff, 5), "\n")
p0 <- new_p0; mu_0 <- new_mu0; sig0 <- new_sig0
f1 <- new_f1
f0 <- new_f0
f <- new_f
gam <- new_gam
}
} else {
## EM-step
k <- 0; converged <- 0
while ( (k < 3)|((k < max_iter) & (!converged)) ) {
k <- k + 1
## E-step
new_f <- (p0 * f0 + (1 - p0) * f1)
new_gam <- p0 * f0 / new_f
if ((dim(z)[2] > 1) && (mono)) new_gam <- MonotoneFDR(z, new_gam)
## M-step
sum_gam <- sum(new_gam)
new_mu0 <- as.vector(t(z) %*% new_gam) / sum_gam
dev <- t(t(z)-new_mu0) * sqrt(new_gam)
new_sig0 <- t(dev) %*% dev / sum_gam
new_p0 <- mean(new_gam)
new_f0 <- dmvnorm(z, new_mu0, new_sig0)
weight <- 1 - new_gam
new_f1 <- rep(0, n)
which_z <- (new_gam <= thre_z)
lcd <- fmlogcondens::fmlcd(X=z[which_z,], w = weight[which_z] / sum(weight[which_z]))
new_f1[which_z] <- exp(lcd$logMLE)
## Update
which_gam <- (new_gam <= Uthre_gam) * (new_gam >= Lthre_gam)
diff <- max(abs(gam - new_gam)[which_gam])
converged <- (diff <= tol)
cat("   EM iteration:", k, ", Change in mdfdr fit = ", round(diff, 5), "\n")
p0 <- new_p0; mu_0 <- new_mu0; sig0 <- new_sig0
f1 <- new_f1
f0 <- new_f0
f <- new_f
gam <- new_gam
}
}
res <- list(p0 = p0, mu0 = mu0, sig0 = sig0,
f = f, f1 = f1, localFDR = gam, iter = k)
gal_res = res
z=z_vel
p.0 = gal_res$p0
gam=gal_res$localFDR
mu.0 = gal_res$mu0
sig.0 = gal_res$sig0
f1.tilde = gal_res$f
which.z = (gam <= 0.2)
thre=min(z[which.z])
n=length(z)
distribution=rep("",n)
for (k in 1:n){
if (which.z[k]) {
distribution[k] = "Alternative"
}
else{
distribution[k] = "Null"
}
}
distribution <- factor(distribution, levels = c("Null","Alternative"))
sub=substitute(
paste(p[0], " = ", p0, ", ",
mu[0], " = ", mu0, ", ",
sigma[0], " = ", sigma0, ", ",
"threshold = ", threshold,
sep = ""),
list(p0 = round(p.0, 2),
mu0 = round(mu.0, digits = 2),
sigma0 = round(sig.0, digits = 2),
threshold = round(thre, digits = 2)))
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), (f1.tilde[order(z)]-p.0*dnorm(zs, mean = mu.0, sd = sig.0))),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), (f1.tilde[order(z)])),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
f1.tilde = gal_res$f1
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), (f1.tilde[order(z)]-p.0*dnorm(zs, mean = mu.0, sd = sig.0))),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), ((1-p.0)*f1.tilde[order(z)]-p.0*dnorm(zs, mean = mu.0, sd = sig.0))),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), ((1-p.0)*f1.tilde[order(z)])),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
gal_res = res
z=z_vel
p.0 = gal_res$p0
gam=gal_res$localFDR
mu.0 = gal_res$mu0
sig.0 = gal_res$sig0
f1.tilde = gal_res$f1
which.z = (gam <= 0.2)
thre=min(z[which.z])
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), ((1-p.0)*f1.tilde[order(z)])),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
gal_res = res
z=z_vel
p.0 = gal_res$p0
gam=gal_res$localFDR
mu.0 = gal_res$mu0
sig.0 = gal_res$sig0
f1.tilde = gal_res$f
which.z = (gam <= 0.2)
thre=min(z[which.z])
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), (f1.tilde[order(z)])),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
rv<-read.table("rvdata_for_stat.txt", skip = 1)
z_vel = scale(rv$V2)[,1]
z <- as.matrix(z_vel)
n <- dim(z)[1]
z = z_vel
tol = 5e-6
alternative = "less"
max_iter = 30
mono = TRUE
thre_z = 0.9
Uthre_gam = 0.9
Lthre_gam = 0.01
NormMix <- function(z, tol = 5e-3, max_iter = 10)
{
k <- 0; converged <- 0
z <- as.matrix(z)
m_dist <- mahalanobis(z, 0, cov(z))
p0 <- mean(m_dist <= 1.65)
mu0 <- rep(0, dim(z)[2])
sig0 <- diag(1, dim(z)[2])
f0 <- dmvnorm(z, mu0, sig0)
mu1 <- apply(as.matrix(z[m_dist > 1.65,]), 2, mean)
sig1 <- cov(as.matrix(z[m_dist > 1.65,]))
f1 <- dmvnorm(z, mu1, sig1)
while ((k < 3) | ((k < max_iter) & (!converged))) {
k <- k + 1
## E-step
gam <- p0 * f0 / (p0 * f0 + (1-p0) * f1)
## M-step
new_p0 <- mean(gam)
new_mu0 <- as.vector(t(z) %*% gam) / sum(gam)
dev0 <- (z - new_mu0) * sqrt(gam)
new_sig0 <- t(dev0) %*% dev0 / sum(gam)
f0 <- dmvnorm(z, new_mu0, new_sig0)
new_mu1 <- as.vector(t(z) %*% (1 - gam)) / sum(1 - gam)
dev1 <- (z - new_mu1) * sqrt(1 - gam)
new_sig1 <- t(dev1) %*% dev1 / sum(1 - gam)
## Update
diff <- max(abs((new_mu0 - mu0)),
abs((new_sig0 - sig0)),
abs((new_mu1 - mu1)),
abs((new_sig1 - sig1)),
abs((new_p0 - p0)))
converged <- (diff <= tol)
p0 <- new_p0
mu0 <- new_mu0
sig0 <- new_sig0
mu1 <- new_mu1
sig1 <- new_sig1
}
return(list(p0 = p0, mu0 = mu0, sig0 = sig0, mu1 = mu1, sig1 = sig1))
}
NE <- function(x, X)
{
n <- nrow(X)
p <- ncol(X)
xx <- matrix(x, nrow = n, ncol = p, byrow = TRUE)
ne.ind <- apply(1*(X >= xx), 1, prod)
return((1:n)[ne.ind == 1])
}
MonotoneFDR <- function(z, fdr)
{
n <- nrow(z)
MFDR <- numeric(n)
for (i in 1:n) {
MFDR[i] <- max(fdr[NE(z[i,], z)])
}
return(MFDR)
}
# ******************* MAIN FUNCTION *******************************
z <- as.matrix(z)
n <- dim(z)[1]
d <- dim(z)[2]
## Initial step: to fit normal mixture
if (dim(z)[2] == 1) {
if (alternative == "greater" | alternative == "g") {
q0 <- quantile(z, probs = .9)
p0 <- mean(z <= q0)
mu0 <- mean(z[z <= q0])
sig0 <- sd(z[z <= q0])
f0 <- dmvnorm(z, mu0, sig0)
mu1 <- mean(z[z > q0])
sig1 <- sd(z[z > q0])
f1 <- dnorm(z, mu1, sig1)
} else {
q0 <- quantile(z, probs = .7)
p0 <- mean(z >= q0)
mu0 <- mean(z[z >= q0])
sig0 <- sd(z[z >= q0])
f0 <- dmvnorm(z, mu0, sig0)
mu1 <- mean(z[z < q0])
sig1 <- sd(z[z < q0])
f1 <- dnorm(z, mu1, sig1)
}
} else {
Params <- NormMix(z)
p0 <- Params$p0
mu0 <- Params$mu0
sig0 <- Params$sig0
f1 <- dmvnorm(z, Params$mu1, Params$sig1)
}
gam <- f <- rep(0, n)
if (d == 1) {
z <- as.numeric(z)
## EM-step
k <- 0; converged <- 0
while ( (k < 3) | ((k < max_iter) & (!converged)) ) {
k <- k + 1
## E-step
new_f <- (p0 * f0 + (1 - p0) * f1)
new_gam <- p0 * f0 / new_f
## M-step
w_gam <- new_gam/sum(new_gam, na.rm = TRUE)
new_mu0 <- sum(w_gam*z, na.rm = TRUE)
new_sig0 <- sqrt(sum(w_gam*(z-new_mu0)^2, na.rm = TRUE))
new_p0 <- mean(new_gam, na.rm = TRUE)
new_f0 <- dnorm(z, new_mu0, new_sig0)
new_f1 <- rep(0, n)
which_z <- (new_gam <= thre_z)
weight <- 1 - new_gam[which_z]
weight <- weight/sum(weight)
new_f1[which_z] <- exp(LogConcDEAD::mlelcd(z[which_z], w = weight)$logMLE)
## Update
which_gam <- (new_gam <= Uthre_gam) * (new_gam >= Lthre_gam)
diff <- max(abs(gam - new_gam)[which_gam])
converged <- (diff <= tol)
cat("   EM iteration:", k, ", Change in fdr fit = ", round(diff, 5), "\n")
p0 <- new_p0; mu0 <- new_mu0; sig0 <- new_sig0
f1 <- new_f1
f0 <- new_f0
f <- new_f
gam <- new_gam
}
} else {
## EM-step
k <- 0; converged <- 0
while ( (k < 3)|((k < max_iter) & (!converged)) ) {
k <- k + 1
## E-step
new_f <- (p0 * f0 + (1 - p0) * f1)
new_gam <- p0 * f0 / new_f
if ((dim(z)[2] > 1) && (mono)) new_gam <- MonotoneFDR(z, new_gam)
## M-step
sum_gam <- sum(new_gam)
new_mu0 <- as.vector(t(z) %*% new_gam) / sum_gam
dev <- t(t(z)-new_mu0) * sqrt(new_gam)
new_sig0 <- t(dev) %*% dev / sum_gam
new_p0 <- mean(new_gam)
new_f0 <- dmvnorm(z, new_mu0, new_sig0)
weight <- 1 - new_gam
new_f1 <- rep(0, n)
which_z <- (new_gam <= thre_z)
lcd <- fmlogcondens::fmlcd(X=z[which_z,], w = weight[which_z] / sum(weight[which_z]))
new_f1[which_z] <- exp(lcd$logMLE)
## Update
which_gam <- (new_gam <= Uthre_gam) * (new_gam >= Lthre_gam)
diff <- max(abs(gam - new_gam)[which_gam])
converged <- (diff <= tol)
cat("   EM iteration:", k, ", Change in mdfdr fit = ", round(diff, 5), "\n")
p0 <- new_p0; mu0 <- new_mu0; sig0 <- new_sig0
f1 <- new_f1
f0 <- new_f0
f <- new_f
gam <- new_gam
}
}
res <- list(p0 = p0, mu0 = mu0, sig0 = sig0,
f = f, f1 = f1, localFDR = gam, iter = k)
gal_res = res
z=z_vel
p.0 = gal_res$p0
gam=gal_res$localFDR
mu.0 = gal_res$mu0
sig.0 = gal_res$sig0
f1.tilde = gal_res$f
which.z = (gam <= 0.2)
thre=min(z[which.z])
n=length(z)
distribution=rep("",n)
for (k in 1:n){
if (which.z[k]) {
distribution[k] = "Alternative"
}
else{
distribution[k] = "Null"
}
}
distribution <- factor(distribution, levels = c("Null","Alternative"))
sub=substitute(
paste(p[0], " = ", p0, ", ",
mu[0], " = ", mu0, ", ",
sigma[0], " = ", sigma0, ", ",
"threshold = ", threshold,
sep = ""),
list(p0 = round(p.0, 2),
mu0 = round(mu.0, digits = 2),
sigma0 = round(sig.0, digits = 2),
threshold = round(thre, digits = 2)))
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), (f1.tilde[order(z)])),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
gal_res = res
z=z_vel
p.0 = gal_res$p0
gam=gal_res$localFDR
mu.0 = gal_res$mu0
sig.0 = gal_res$sig0
f1.tilde = gal_res$f1
which.z = (gam <= 0.2)
thre=min(z[which.z])
n=length(z)
distribution=rep("",n)
for (k in 1:n){
if (which.z[k]) {
distribution[k] = "Alternative"
}
else{
distribution[k] = "Null"
}
}
distribution <- factor(distribution, levels = c("Null","Alternative"))
sub=substitute(
paste(p[0], " = ", p0, ", ",
mu[0], " = ", mu0, ", ",
sigma[0], " = ", sigma0, ", ",
"threshold = ", threshold,
sep = ""),
list(p0 = round(p.0, 2),
mu0 = round(mu.0, digits = 2),
sigma0 = round(sig.0, digits = 2),
threshold = round(thre, digits = 2)))
df = data.frame(z=z)
zs <- sort(z)
ggplot(df,aes(x=z)) +
geom_histogram(aes(y = ..density..),colour = 1, fill = "white",bins=100) +
geom_line(aes(sort(z), p.0*dnorm(zs, mean = mu.0, sd = sig.0)),color = "#00BFC4",lwd=1.1) +
geom_line(aes(sort(z), ((1-p.0)*f1.tilde[order(z)])),color = "#F8766D",lwd=1.1) +
geom_vline(aes(xintercept=mu.0), color="#00BFC4",linetype="dashed") +
geom_point(mapping = aes(x = thre, y = 0.01),size = 2,color='yellow',shape=25,fill="yellow") +
labs(x="z-value", y = "density") +
ggtitle(sub) +
theme(plot.title = element_text(margin = margin(b = -10))) +
geom_rug(aes(z,color = distribution))+
scale_color_manual(values = c("#00BFC4", "#F8766D"),name="")+
theme_classic()
# installation
library(devtools)
install_github("JungiinChoi/multiLocalFDR")
library(multiLocalFDR)
?multiLocalFDR
data("Galaxy", package = "multiLocalFDR")
data("galaxy", package = "multiLocalFDR")
head(Galaxy)
head(galaxy)
library(devtools)
install_github("JungiinChoi/multiLocalFDR")
library(multiLocalFDR)
data("galaxy", package = "multiLocalFDR")
head(galaxy)
library(multiLocalFDR)
# Data
head(galaxy)
# Data
head(Galaxy)
