Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.1 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.2 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal",
param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
3
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
library(SpMix)
Draw.boxplotsM <- function(Obj)
{
p0hat <- Obj$p0hat.SP
Sensitivity <- Obj$Sensitivity
FPR <- 1 - Obj$Specificity
par(mfrow = c(1, 3))
boxplot(p0hat, main = "Estimates of p0")
boxplot(FPR, main = "False Positive Rate = (1 - Specificity)", ylim = c(0, 0.05))
boxplot(Sensitivity, main = "Sensitivity", ylim = c(0.8, 1))
}
M <- 500
N <- 1000
p0=0.95
r=1
n=N
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.1 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.2 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal",
param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
library(SpMix)
M <- 500
N <- 1000
p0=0.95
r=1
n=N
Draw.boxplotsM <- function(Obj)
{
p0hat <- Obj$p0hat.SP
Sensitivity <- Obj$Sensitivity
FPR <- 1 - Obj$Specificity
par(mfrow = c(1, 3))
boxplot(p0hat, main = "Estimates of p0")
boxplot(FPR, main = "False Positive Rate = (1 - Specificity)", ylim = c(0, 0.05))
boxplot(Sensitivity, main = "Sensitivity", ylim = c(0.8, 1))
}
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.1 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.2 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal",
param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens_merge",build_vignettes = FALSE)
library(SpMix)
res <- sp.mix.multi(z)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens",build_vignettes = FALSE)
library(SpMix)
res <- sp.mix.multi(z)
devtools::install_github("JaneeChoi/SpMix",build_vignettes = FALSE)
library(SpMix)
SimMultNormal <- function(M, n, p0)
# [Multivariate] Null: Normal, Nonnull: Normal
{
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.1 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
result.1D.2 <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
for ( r in 1:M ) {
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal",
param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result$p0hat.SP[r] <- p0hat
result$Sensitivity[r] <- TP/(TP + FN)
result$Specificity[r] <- TN/(TN + FP)
res <- sp.mix.1D(z[,1], doplot = FALSE)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result.1D.1$p0hat.SP[r] <- p0hat
result.1D.1$Sensitivity[r] <- TP/(TP + FN)
result.1D.1$Specificity[r] <- TN/(TN + FP)
res <- sp.mix.1D(z[,2], doplot = FALSE)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result.1D.2$p0hat.SP[r] <- p0hat
result.1D.2$Sensitivity[r] <- TP/(TP + FN)
result.1D.2$Specificity[r] <- TN/(TN + FP)
}
return(list(res2D = result,
res1D.1 = result.1D.1,
res1D.2 = result.1D.2))
}
M <- 1 #1
N <- 10000 #20000
time.8<-system.time(Res.8 <- SimMultNormal(M = M, n = N, p0 = 0.90))
time.9<-system.time(Res.9 <- SimMultNormal(M = M, n = N, p0 = 0.80))
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test")
M <- 1 #1
N <- 10000 #20000
#p0=0.95
#r=1
#n=N
time.7<-system.time(Res.7 <- SimMultNormal(M = M, n = N, p0 = 0.95))
time.8<-system.time(Res.8 <- SimMultNormal(M = M, n = N, p0 = 0.90))
time.9<-system.time(Res.9 <- SimMultNormal(M = M, n = N, p0 = 0.80))
save.image(file = "SimMultiNormal.RData")
N <- 20000 #20000
time.10<-system.time(Res.10 <- SimMultNormal(M = M, n = N, p0 = 0.95))
time.11<-system.time(Res.11 <- SimMultNormal(M = M, n = N, p0 = 0.90))
time.12<-system.time(Res.12 <- SimMultNormal(M = M, n = N, p0 = 0.80))
save.image(file = "SimMultiNormal_2.RData")
time.7
time.8
time.9
time.10
time.11
time.12
time.12
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens",build_vignettes = FALSE)
library(SpMix)
getAnywhere(sp.mix.multi)
library(SpMix)
getAnywhere(sp.mix.multi)
devtools::install_github("JaneeChoi/SpMix",ref="fmlogcondens")
devtools::install_github("FabianRathke/fmlogcondens")
library(SpMix)
devtools::install_github("JaneeChoi/SpMix")
install.packages(c('Rcpp', 'RcppArmadillo'))
devtools::install_github("JaneeChoi/SpMix",ref = "fmlogcondens_merge")
library(SpMix)
set.seed(210828)
M <- 1
for (N in c(1000)){
time1<-system.time(Res.1<-SimMultNormal(M = M, n = N, p0 = 0.95))[3]
print("finish 1")
time2<-system.time(Res.2<-SimMultNormal(M = M, n = N, p0 = 0.90))[3]
print("finish 2")
time3<-system.time(Res.3<-SimMultNormal(M = M, n = N, p0 = 0.80))[3]
print("finish 3")
result_df<-data.frame(res1=c(time1,Res.1$p0hat.SP[1],Res.1$Sensitivity[1],Res.1$Specificity[1]),res2=c(time2,Res.2$p0hat.SP[1],Res.2$Sensitivity[1],Res.2$Specificity[1]),res3=c(time3,Res.3$p0hat.SP[1],Res.3$Sensitivity[1],Res.3$Specificity[1]))
#write.csv(result_df,paste0("result_Normal_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
SimMultNormal <- function(M, n, p0)
# [Multivariate] Null: Normal, Nonnull: Normal
{
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
for ( r in 1:M ) {
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal", param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result$p0hat.SP[r] <- p0hat
result$Sensitivity[r] <- TP/(TP + FN)
result$Specificity[r] <- TN/(TN + FP)
}
return(result)
}
for (N in c(1000)){
time1<-system.time(Res.1<-SimMultNormal(M = M, n = N, p0 = 0.95))[3]
print("finish 1")
time2<-system.time(Res.2<-SimMultNormal(M = M, n = N, p0 = 0.90))[3]
print("finish 2")
time3<-system.time(Res.3<-SimMultNormal(M = M, n = N, p0 = 0.80))[3]
print("finish 3")
result_df<-data.frame(res1=c(time1,Res.1$p0hat.SP[1],Res.1$Sensitivity[1],Res.1$Specificity[1]),res2=c(time2,Res.2$p0hat.SP[1],Res.2$Sensitivity[1],Res.2$Specificity[1]),res3=c(time3,Res.3$p0hat.SP[1],Res.3$Sensitivity[1],Res.3$Specificity[1]))
#write.csv(result_df,paste0("result_Normal_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
Draw.boxplotsM <- function(Obj)
{
p0hat <- Obj$p0hat.SP
Sensitivity <- Obj$Sensitivity
FPR <- 1 - Obj$Specificity
par(mfrow = c(1, 3))
boxplot(p0hat, main = "Estimates of p0")
boxplot(FPR, main = "False Positive Rate = (1 - Specificity)", ylim = c(0, 0.05))
boxplot(Sensitivity, main = "Sensitivity", ylim = c(0.8, 1))
}
SimMultNormal <- function(M, n, p0)
# [Multivariate] Null: Normal, Nonnull: Normal
{
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
for ( r in 1:M ) {
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal", param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result$p0hat.SP[r] <- p0hat
result$Sensitivity[r] <- TP/(TP + FN)
result$Specificity[r] <- TN/(TN + FP)
}
return(result)
}
SimMultNormal3d <- function(M, n, p0)
# [Multivariate] Null: Normal, Nonnull: Normal
{
library(copula)
param <- 0.5
library(mvtnorm)
rho12 <- 0.25
rho13 <- 0.25
rho23 <- 0.25
Sigma0 <- matrix(c(1, rho12, rho13,
rho12, 1, rho23,
rho13,rho23,1),
ncol = 3, byrow = T)
result <- data.frame(p0hat = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
library(scatterplot3d)
for ( r in 1:M ) {
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, ellipCopula(family = "normal", param = param, dim = 3))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qnorm(V, mean = 3.5, sd = .5)
z <- rbind(z0, z1)
scatterplot3d(z, color = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result$p0hat.SP[r] <- p0hat
result$Sensitivity[r] <- TP/(TP + FN)
result$Specificity[r] <- TN/(TN + FP)
}
return(result)
}
library(copula)
library(mvtnorm)
library(scatterplot3d)
SimMultGamma <- function(M, n, p0)
# [Multivariate] Null: Normal, Nonnull: Normal
{
library(copula)
param <- 2
rho12 <- 0.5
Sigma0 <- matrix(c(1, rho12,
rho12, 1),
ncol = 2, byrow = T)
library(mvtnorm)
result <- data.frame(p0hat.SP = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
for ( r in 1:M ) {
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, frankCopula(param = param, dim = 2))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qgamma(V, shape = 12, rate = 4)
z <- rbind(z0, z1)
plot(z, col = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result$p0hat.SP[r] <- p0hat
result$Sensitivity[r] <- TP/(TP + FN)
result$Specificity[r] <- TN/(TN + FP)
}
return(result)
}
SimMultGamma3d <- function(M, n, p0)
# [Multivariate] Null: Normal, Nonnull: Normal
{
library(copula)
param <- 2
rho12 <- 0.25
rho13 <- 0.25
rho23 <- 0.25
Sigma0 <- matrix(c(1, rho12, rho13,
rho12, 1, rho23,
rho13,rho23,1),
ncol = 3, byrow = T)
library(mvtnorm)
result <- data.frame(p0hat.SP = rep(NA, M),
Sensitivity = rep(NA, M),
Specificity = rep(NA, M))
library(scatterplot3d)
for ( r in 1:M ) {
cat(r, "/", M, "\n")
n0 <- rbinom(1, n, p0)
n1 <- n - n0
V <- rCopula(n1, frankCopula(param = param, dim = 3))
z0 <- rmvnorm(n0, sigma = Sigma0)
z1 <- qgamma(V, shape = 12, rate = 4)
z <- rbind(z0, z1)
scatterplot3d(z, color = c(rep(1, n0), rep(2, n1)), pch = 20)
res <- sp.mix.multi(z)
p0hat <- res$p.0
Nhat <- as.integer(res$localfdr <= 0.2)
TP <- sum(Nhat[-(1:n0)] == 1)
TN <- sum(Nhat[1:n0] == 0)
FP <- n0 - TN
FN <- n1 - TP
result$p0hat.SP[r] <- p0hat
result$Sensitivity[r] <- TP/(TP + FN)
result$Specificity[r] <- TN/(TN + FP)
}
return(result)
}
library(SpMix)
set.seed(210828)
M <- 1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/2d_Normal_fmlogcondens")
for (N in c(100,500,1000,5000,10000,15000,20000,25000)){
time1<-system.time(Res.1<-SimMultNormal(M = M, n = N, p0 = 0.95))[3]
print("finish 1")
time2<-system.time(Res.2<-SimMultNormal(M = M, n = N, p0 = 0.90))[3]
print("finish 2")
time3<-system.time(Res.3<-SimMultNormal(M = M, n = N, p0 = 0.80))[3]
print("finish 3")
result_df<-data.frame(res1=c(time1,Res.1$p0hat.SP[1],Res.1$Sensitivity[1],Res.1$Specificity[1]),res2=c(time2,Res.2$p0hat.SP[1],Res.2$Sensitivity[1],Res.2$Specificity[1]),res3=c(time3,Res.3$p0hat.SP[1],Res.3$Sensitivity[1],Res.3$Specificity[1]))
write.csv(result_df,paste0("result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
# sp.mix.multi @ fmlogcondens_merge 2d Gamma
set.seed(210828)
M <- 1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/2d_Gamma_fmlogcondens ")
for (N in c(100,500,1000,5000,10000,15000,20000,25000)){
time1<-system.time(Res.1<-SimMultGamma(M = M, n = N, p0 = 0.95))[3]
print("finish 1")
time2<-system.time(Res.2<-SimMultGamma(M = M, n = N, p0 = 0.90))[3]
print("finish 2")
time3<-system.time(Res.3<-SimMultGamma(M = M, n = N, p0 = 0.80))[3]
print("finish 3")
result_df<-data.frame(res1=c(time1,Res.1$p0hat.SP[1],Res.1$Sensitivity[1],Res.1$Specificity[1]),res2=c(time2,Res.2$p0hat.SP[1],Res.2$Sensitivity[1],Res.2$Specificity[1]),res3=c(time3,Res.3$p0hat.SP[1],Res.3$Sensitivity[1],Res.3$Specificity[1]))
write.csv(result_df,paste0("result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
# sp.mix.multi @ fmlogcondens_merge 3d Normal
library(SpMix)
set.seed(210828)
M <- 1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/3d_Normal_fmlogcondens")
for (N in c(100,500,1000,5000,10000,15000,20000,25000)){
time1<-system.time(Res.1<-SimMultNormal3d(M = M, n = N, p0 = 0.95))[3]
print("finish 1")
time2<-system.time(Res.2<-SimMultNormal3d(M = M, n = N, p0 = 0.90))[3]
print("finish 2")
time3<-system.time(Res.3<-SimMultNormal3d(M = M, n = N, p0 = 0.80))[3]
print("finish 3")
result_df<-data.frame(res1=c(time1,Res.1$p0hat.SP[1],Res.1$Sensitivity[1],Res.1$Specificity[1]),res2=c(time2,Res.2$p0hat.SP[1],Res.2$Sensitivity[1],Res.2$Specificity[1]),res3=c(time3,Res.3$p0hat.SP[1],Res.3$Sensitivity[1],Res.3$Specificity[1]))
write.csv(result_df,paste0("result_",N,".csv"))
print(result_df)
print("finish")
print(N)
}
# sp.mix.multi @ fmlogcondens_merge 3d Gamma
library(SpMix)
set.seed(210828)
M <- 1
setwd("/Users/choiiiiii/Documents/GitHub/Semiparam_Mixture/test_case/fmlogcondens_test/3d_Gamma_fmlogcondens")
for (N in c(100,500,1000,5000,10000,15000,20000,25000)){
time1<-system.time(Res.1<-SimMultGamma3d(M = M, n = N, p0 = 0.95))[3]
print("finish 1")
time2<-system.time(Res.2<-SimMultGamma3d(M = M, n = N, p0 = 0.90))[3]
print("finish 2")
time3<-system.time(Res.3<-SimMultGamma3d(M = M, n = N, p0 = 0.80))[3]
print("finish 3")
result_df<-data.frame(res1=c(time1,Res.1$p0hat.SP[1],Res.1$Sensitivity[1],Res.1$Specificity[1]),res2=c(time2,Res.2$p0hat.SP[1],Res.2$Sensitivity[1],Res.2$Specificity[1]),res3=c(time3,Res.3$p0hat.SP[1],Res.3$Sensitivity[1],Res.3$Specificity[1]))
write.csv(result_df,paste0("result_",N,".csv"))
print("finish")
print(N)
}
devtools::install_github("JaneeChoi/SpMix")
library(SpMix)
getAnywhere(sp.mix.multi)
